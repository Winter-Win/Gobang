bool is_win(int x,int y)
{
    int count = 0;
    int flag = 1;
    char cur = board[x][y];

    //垂直上
    for(int i = x-1, int j = y; i >= 0 && count++ < 5; i --)
    {
        if(board[i][j] == cur)
            flag++;
        else
            break;
    }

    //垂直下
    count = 0;
    for(int i = x + 1, int j = y; i < ROW && count ++ < 5; i ++ )
    {
        if(board[i][j] == cur)
            flag++;
        else
            break;
    }

    count = 0;
    if( flag >= 5 )
        return true;
    else
        flag = 1;

    //水平右
    for(int i = x, int j = y + 1; j < COL && count ++ < 5 ; j ++ )
    {
        if(board[i][j] == cur)
            flag++;
        else
            break;
    }

    //水平左
    count = 0;
    for(int i = x, int j = y - 1; j >= 0 && count++ < 5 ; j --)
    {
        if(board[i][j] == cur)
            flag++;
        else
            break;
    }

    count = 0;
    if(flag >= 5)
        return true;
    else
        flag = 1;

    //主右下
    for(int i = x + 1, int j = y + 1; i < ROW && j < 3 && count ++ < 5 ; i ++ ,j ++)
    {
        if(board[i][j] == cur)
            flag++;
        else
            break;
    }

    //主左上
    count = 0;
    for(int i = x - 1, int j = y - 1; i >= 0 && j >= 0 && count++ < 5 ; i -- ,j --)
    {
        if(board[i][j] == cur)
            flag++;
        else
            break;
    }

    count = 0;
    if(flag >= 5)
        return true;
    else
        flag = 1;

    //斜右上
    for(int i = x -1, int j = y + 1; i >= 0 && j < COL && count++ < 5; i --,j++)
    {
        if(board[i][j] == cur)
            flag++;
        else
            break;
    }

    //斜左下
    count = 0;
    for(int i = x + 1, int j = y -1; i < ROW && y >= 0 && count++ < 5; i ++,j--)
    {
        if(board[i][j] == cur)
            flag++;
        else
            break;
    }

    count = 0;
    if(flag >= 5)
        return true;
    else
        flag = 1;


    return flase;
}
